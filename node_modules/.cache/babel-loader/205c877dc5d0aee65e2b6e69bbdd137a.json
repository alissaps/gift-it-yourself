{"ast":null,"code":"var _jsxFileName = \"/Users/alissaseixas/git/ironhack/project-front-end/gift-it-yourself/src/components/RandomMessage.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport Navbar from \"./Navbar\";\nimport Loading from \"./Loading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction RandomMessage() {\n  _s();\n\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    setLoading(false);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 24\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }, this)\n    }, void 0, false)\n  }, void 0, false);\n}\n\n_s(RandomMessage, \"J7PPXooW06IQ11rfabbvgk72KFw=\");\n\n_c = RandomMessage;\nexport default RandomMessage;\n\nvar _c;\n\n$RefreshReg$(_c, \"RandomMessage\");","map":{"version":3,"sources":["/Users/alissaseixas/git/ironhack/project-front-end/gift-it-yourself/src/components/RandomMessage.js"],"names":["useEffect","useState","Navbar","Loading","RandomMessage","loading","setLoading"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;;;;AAGA,SAASC,aAAT,GAAyB;AAAA;;AACrB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,IAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAFQ,EAEN,EAFM,CAAT;AAQA,sBACI;AAAA,cACKD,OAAO,gBAAG,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAH,gBACJ;AAAA,6BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAFR,mBADJ;AAWH;;GAtBQD,a;;KAAAA,a;AAwBT,eAAeA,aAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport Navbar from \"./Navbar\";\nimport Loading from \"./Loading\";\n\n\nfunction RandomMessage() {\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n      setLoading(false);\n    }, []);\n    \n    \n    \n    \n    \n    return (\n        <>\n            {loading ? <Loading/> : (\n                <>\n                    <Navbar/>\n                </>\n            )}\n        </>\n    )\n\n\n}\n\nexport default RandomMessage;"]},"metadata":{},"sourceType":"module"}